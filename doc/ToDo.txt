ToDo
----
-

- Präsentation
	- Grundidee : Schnelldurchlauf
		- Wie erfasse ich Anforderungen ?
		- Wie komme ich zum ausführbaren Code?
	- Vision
	- Domänenmodell
	- Anwendungsfälle
	- Systemoperationen
	- Design
		- Übernahme von Klassen aus dem DM
			- StudentList + StudentGroup
		- Zuweisung von Verantwortlichkeiten mit Hilfe von Prinzipien und Patterns
		- Visitor Pattern für flexible Ausgaben im UI
			- Erzeugung der finalen Excel Tabelle
			- Ausgabe Resultat
		- Einführung der GroupingSession
			- Einfache, dafür aber etwas mehr Klassen
	- Implementation
		-> Code
	- Testen
		- Vollständige Abdeckung der Domänenlogik
	- Configuration Management
		- Eigener SVN Server
	- Environment/Deployment
		- Eclipse, automatischer Compiler
		- UMLet
		- Ant Script für Erzeugung Jars und Kopie an richtigen Ort
	- PM + Prozess
		- Am Anfang stand die Vision, die ich verfolgt habe und auch erreicht habe. Den Plan daf�r aber habe ich mehrmals ge�ndert.
		- 5 Iterationen
			- Domäne + Einlesen aus Evento (ohne UI, nur Testfälle)
			- Logik + Import für OLAT
			- Gruppenauslosung  (ohne UI, nur Testfälle)
			- Swing UI
			- JavaFX UI
		- Was ist echt an diesem Projekt (1 Mann, ca. 30h Aufwand)
			- Welche Dokumente habe ich wirklich vorher gemacht?
				- Vision und DM
			- Was habe ich mir explizit überlegt, aber nicht aufgeschrieben
				- "Ping-Pong" und Fehlerbehandlung Use Cases
				- Architektur, eigene Evento / Olat Klassen
				- Visitor Pattern
			- Was ging "automatisch"
				- Systemoperationen
				- Die meisten Design Entscheide
				- Implementation und automatische Tests



- Animation in FX Variante abschliessen
	- Gruppe einblenden (rasch) + Font etwas vergrössern
	- Student
		- rotieren
		- Font vergrössern
- FX Variante : Exception Handling im UI

- Requirements noch etwas ausbauen
	-> Präsentation
- Domänemodell
	-> Präsentation
- Architektur-Diagramm
	-> Präsentation
- Diagramm für Visitor-Pattern
	-> Diagramm und Software in Präsentation
- Automatische Testfälle
	-> Ausbauen
	-> Präsentation


